package Hero

import HashMap
import HashList
import Event
import GeneralBonus
import GlobalInitialization
import ClosureTimers
import initlater Common 

public Hero array heros

public function unit.setHero(Hero hero)
    heros[this.getOwner().getId()] = hero

public function unit.getHero() returns Hero
    return heros[this.getOwner().getId()]

public function player.hasHero() returns boolean
    return heros[this.getId()] != null

public function player.getHero() returns Hero
    return heros[this.getId()]

public class Hero
    unit u
    int playerIndex
    int defensePoint = 0 // 守家积分
    int gamePoint = 0 // 游戏积分
    int reputation = 0 // 声望
    int kongFuQuality = 0 // 武学修为
    int freeAttr = 0 // 自由属性点
    int perception = 0 // 悟性
    int constitution = 0 // 根骨
    int healingSkill = 0 // 医术
    int courage = 0 // 胆魄
    int luck = 0 // 福缘
    int channel = 0 // 经脉
    int uniquePerception // 绝学领悟点
    int characterA = 0 // 性格A
    int characterB = 0 // 性格B
    int partTime = 0 // 副职
    int partTimeMaster = 0 // 副职是否成为宗师 0-普通 1-宗师
    int practice = 0 // 历练|修行
    real expCoeff = 1 // 历练系数
    real damageAddition = 0 // 伤害加成
    real damageAbsorb = 0 // 伤害吸收 0-1之间的小数
    real criticalRate = 0 // 暴击率 0-1之间的小数
    real criticalTimes = 1 // 暴击倍数
    int gender = 0 // 性别 0-女 1-男
    int denomination = 0 // 门派
    real maxDamage = 0 // 最大伤害
    boolean learnFirst = false // 是否学第一个门派技能
    boolean learnSecond = false // 是否学第二个门派技能
    boolean learnThird = false // 是否学第三个门派技能
    boolean learnFinal = false // 是否学门派绝学
    unit pet
    Table kongFuTable // 武功升重表
    HashList<int> kongFuList

    construct(unit u, int playerIndex)
        this.u = u
        this.playerIndex = playerIndex
        if u.getTypeId() == 'O000' or u.getTypeId() == 'O001' or u.getTypeId() == 'O004' or u.getTypeId() == 'O02J'
            gender = 1
        EventListener.add(u, EVENT_UNIT_DEATH, () -> onDeath())
        EventListener.add(u, EVENT_UNIT_HERO_LEVEL, () -> onLevelUp())
        kongFuTable = new Table()
        kongFuList = new HashList<int>
        
    function canLearnMoreKongFu() returns bool
        return kongFuList.size() < 11

    function setPosition(vec2 pos)
        u.setPos(pos)
        PanCameraToForPlayer(u.getOwner(), pos.x, pos.y)
        
    function onLevelUp()
        // TODO 英雄升级执行的动作
        u.setGeneralBonus(BONUS_TYPE_MAX_LIFE, MODE_ADD, 400)
        u.setGeneralBonus(BONUS_TYPE_ATTACK, MODE_ADD, 40)
        u.setGeneralBonus(BONUS_TYPE_ARMOR, MODE_ADD, 5)
        if u.getLevel() >= 3 and not learnFirst
            learnFirst = true
            if denomination != DENOMINATION_FREE
                if canLearnMoreKongFu()
                    kongFuList.add(denominations[denomination].firstKongFu)
                    u..addAbility(denominations[denomination].firstKongFu)..makeAbilityPermanent(denominations[denomination].firstKongFu, true)
                    printTimedToPlayer("|cff00FF66恭喜领悟技能：" + GetObjectName(denominations[denomination].firstKongFu), 15, u.getOwner())
                    DisplayTextToForce(bj_FORCE_ALL_PLAYERS,"|cff00FF66玩家" + (u.getOwner().getId() + 1).toString() + "成为" + denominations[denomination].name + "初级弟子")
                    u.getOwner().setName("〓" + denominations[denomination].name + "初级弟子〓" + playerNames.loadString(u.getOwner().getHandleId()))
            else
                printTimedToPlayer("|cff00FF66自由门派3级奖励5点自由属性点及随机武功秘籍一本、小概率获得奇武秘籍一本", 15, u.getOwner())
                freeAttr += 5
                if percentPossiblity(99)
                    u.addItem(kongFus[GetRandomInt(18, 35)].itemId)
                else
                    u.addItem(kongFus[GetRandomInt(0, 17)].itemId)
                if percentPossiblity(10)
                    u.addItem(kongFus[GetRandomInt(41, 55)].itemId)
        if u.getLevel() >= 3 and u.getAbilityLevel(denominations[denomination].firstKongFu) >= 2 and not learnSecond
            learnSecond = true
            if denomination != DENOMINATION_FREE
                kongFuList.add(denominations[denomination].secondKongFu)
                u..addAbility(denominations[denomination].secondKongFu)..makeAbilityPermanent(denominations[denomination].secondKongFu, true)
                printTimedToPlayer("|cff00FF66恭喜领悟技能：" + GetObjectName(denominations[denomination].secondKongFu), 15, u.getOwner())
                DisplayTextToForce(bj_FORCE_ALL_PLAYERS,"|cff00FF66玩家" + (u.getOwner().getId() + 1).toString() + "成为" + denominations[denomination].name + "中级弟子")
                u.getOwner().setName("〓" + denominations[denomination].name + "中级弟子〓" + playerNames.loadString(u.getOwner().getHandleId()))
        if u.getLevel() >= 3 and u.getAbilityLevel(denominations[denomination].secondKongFu) >= 2 and not learnThird
            learnThird = true
            if denomination != DENOMINATION_FREE
                kongFuList.add(denominations[denomination].thirdKongFu)
                u..addAbility(denominations[denomination].thirdKongFu)..makeAbilityPermanent(denominations[denomination].thirdKongFu, true)
                printTimedToPlayer("|cff00FF66恭喜领悟技能：" + GetObjectName(denominations[denomination].thirdKongFu), 15, u.getOwner())
                DisplayTextToForce(bj_FORCE_ALL_PLAYERS,"|cff00FF66玩家" + (u.getOwner().getId() + 1).toString() + "成为" + denominations[denomination].name + "高级弟子")
                u.getOwner().setName("〓" + denominations[denomination].name + "高级弟子〓" + playerNames.loadString(u.getOwner().getHandleId()))

                



    function onDeath()
        var t = CreateTimer()
        CreateTimerDialogBJ(t,"复活倒计时:")
        TimerDialogDisplayForPlayerBJ(true, bj_lastCreatedTimerDialog, players[playerIndex])
        var tg = bj_lastCreatedTimerDialog
        t.start(HERO_REVIVAL_TIME, null)
        doAfter(HERO_REVIVAL_TIME) ->
            u.revive(HERO_BORN_LOC, true)
            players[playerIndex].panCamToTimed(u, 0)
            DestroyTimerDialog(tg)
            t.destr()
      
    
     
    